<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushJScript.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Javs &gt;&gt; Node.js</h3>
<p><b>如何透過Promise等待事件完成</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="https://stackoverflow.com/questions/5010288/how-to-make-a-function-wait-until-a-callback-has-been-called-using-node-js">how-to-make-a-function-wait-until-a-callback-has-been-called-using-node-js</a><br><br>

main.js
</p>
<pre class="brush:javascript">
var r = ''; 
var vbox = require('virtualbox');

vbox.list(function(vms, error) {
    r = vms;
});

console.log('vm: %s', r);
</pre><br>

<p>
執行
</p>
<pre>
$ node main.js
    [2023-08-15 01:14:04.539] [INFO] VirtualBox - linux
    [2023-08-15 01:14:04.546] [INFO] VirtualBox - Listing VMs
    vm: 
</pre><br>

<p>
由於Node.js都是透過Callback處理方式(Asynchronous)，因此，如上面例子，當呼叫vbox.list()時，vbox.list()的動作已經完成，因此，會直接往下走，但是最終結果卻是要在Callback才會知道，遇到這種情況，一般會透過Event做等待，直到Callback處理完成後才把結果列印出來，不過，在Node.js的應用上，一般是使用Promise()做等待的動作，如下修改範例：
</p>
<pre class="brush:javascript">
var vbox = require('virtualbox');

async function start() {
    var r = '';

    await new Promise((resolve, reject) =&gt; {
        vbox.list(function(vms, error) {
            r = vms;
            resolve('ok');
        });
    });

    console.log('vm: %s', r);
}

start();
</pre>
<p>
呼叫resolve()並且傳入隨意字串，代表允許Promise回傳成功的結果(代表Event已經完成)，反之，如果呼叫reject()並且傳入隨意字串，代表發生錯誤，Promise將會throw error，而error字串內容則是設定給reject()的字串<br><br>
</p>
<pre>
$ node main.js
    [2023-08-15 01:32:12.109] [INFO] VirtualBox - linux
    [2023-08-15 01:32:12.115] [INFO] VirtualBox - Listing VMs
    [2023-08-15 01:32:12.130] [INFO] VirtualBox - Virtualbox version detected as 6
    vm: { '8591d090-e95a-423a-b99d-cf558bd0d245': [Object] }
</pre><br>

<p>
<br><a href="../../program.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
