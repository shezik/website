<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushAsm.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>MASM32 &gt;&gt; Assembly (x86) &gt;&gt; Dialog</h3>
<p><b>Window</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="http://winapi.freetechsecrets.com/win32/">win32</a><br>
2. <a href="http://masm32.com/board/index.php?topic=3584.0">masm32</a><br><br>

Windows的視窗可以分成：<b>Dialog</b>、Single Document Interface(<b>SDI</b>)、Multiple Document Interface(<b>MDI</b>)三種類別，相對於SDI、MDI，Dialog類別是比較容易上手學習的一個類別，相當適合初次學習Windows視窗設計的使用者，而Windows視窗程式設計的核心就是圍繞着事件處理(處理Message)，任何的視窗設定或者溝通都是以事件導向為原則，因此，寫出一個簡單的視窗框架，將有助於了解Windows視窗程式的運作<br><br>

main.asm
</p>
<pre class="brush:asm">
    .386
    .model flat,stdcall
    option casemap:none

include c:\masm32\include\windows.inc
include c:\masm32\include\kernel32.inc
include c:\masm32\include\user32.inc

includelib c:\masm32\lib\user32.lib
includelib c:\masm32\lib\kernel32.lib

    WinMain proto :DWORD, :DWORD, :DWORD, :DWORD

    .data
szCaption   db "main",0
CommandLine dd 0
hWnd        dd 0
hInstance   dd 0

    .code
start:
    invoke GetModuleHandle, NULL
    mov hInstance, eax

    invoke GetCommandLine
    mov CommandLine, eax

    invoke WinMain, hInstance, NULL,CommandLine, SW_SHOWDEFAULT
    invoke ExitProcess, eax

WinMain proc hInst:DWORD, hPrevInst:DWORD, CmdLine:DWORD, CmdShow:DWORD
    local msg:MSG

    invoke CreateWindowEx, WS_EX_LEFT, WC_DIALOG, offset szCaption, 
        WS_OVERLAPPEDWINDOW or WS_VISIBLE, 0, 0, 300, 300, 
        NULL, NULL, NULL, NULL

@@:
    invoke GetMessage, addr msg, NULL, 0, 0
    cmp eax, 0
    je @f
    invoke DispatchMessage, addr msg
    jmp @b
@@:
    mov eax, msg.wParam
    ret
WinMain endp
end start
</pre>
<p>
<b>Line 22 ~ 26</b>：程式進入點是start()，因此，需要手動保存Instance和CommandLine內容<br>
<b>Line 28</b>：呼叫自定義的WinMain()，模擬C語言的WinMain()<br>
<b>Line 29</b>：呼叫ExitProcess()讓Process退出並且釋放相關資源<br>
<b>Line 34</b>：在建立Windows視窗時，需要指定對應的Class，如：Edit、Button，除了可以使用系統預設的Class之外，也可以註冊自定義的Class，上面例子使用的WC_DIALOG，就是系統預設定義的Dialog Class，WS_OVERLAPPEDWINDOW代表視窗有標題、最大化、最小化的按鈕，WS_VISIBLE是建立一個可視化的視窗<br>
<b>Line 39</b>：從Queue提取Message(包含視窗、系統事件)<br>
<b>Line 42</b>：分發Message到處理視窗事件的副程式，由於目前的Dialog視窗並沒有對應的處理副程式，因此，無法處理任何Message，包含關閉視窗的Message，所以必須使用kill命令強制關閉該視窗<br><br>

Makefile
</p>
<pre>
export WINEPREFIX=/home/user/.wine_amd64

TARGET=main
MYWINE=box86 wine
MASM32=/home/user/.wine_amd64/drive_c/masm32

all:
    ${MYWINE} ${MASM32}/bin/ml.exe /c /coff /nologo ${TARGET}.asm
    ${MYWINE} ${MASM32}/bin/link.exe /SUBSYSTEM:WINDOWS /MERGE:.rdata=.text ${TARGET}.obj

run:
    ${MYWINE} ${TARGET}.exe

clean:
    rm -rf ${TARGET}.exe ${TARGET}.obj
</pre><br>

<p>
編譯、執行
</p>
<pre>
$ make
$ make run
</pre>
<p>
<img style="border:0px" src="dlg_window/1.jpg" class="maxSize"><br><br>

如果連預設的視窗訊息都不處理，如下程式：
</p>
<pre class="brush:asm">
    .386
    .model flat,stdcall
    option casemap:none

include c:\masm32\include\windows.inc
include c:\masm32\include\kernel32.inc
include c:\masm32\include\user32.inc

includelib c:\masm32\lib\user32.lib
includelib c:\masm32\lib\kernel32.lib

    WinMain proto :DWORD, :DWORD, :DWORD, :DWORD

    .data
szCaption   db "main",0
CommandLine dd 0
hWnd        dd 0
hInstance   dd 0

    .code
start:
    invoke GetModuleHandle, NULL
    mov hInstance, eax

    invoke GetCommandLine
    mov CommandLine, eax

    invoke WinMain, hInstance, NULL,CommandLine, SW_SHOWDEFAULT
    invoke ExitProcess, eax

WinMain proc hInst:DWORD, hPrevInst:DWORD, CmdLine:DWORD, CmdShow:DWORD
    local msg:MSG

    invoke CreateWindowEx, WS_EX_LEFT, WC_DIALOG, offset szCaption, 
        WS_OVERLAPPEDWINDOW or WS_VISIBLE, 0, 0, 300, 300, 
        NULL, NULL, NULL, NULL

@@:
    nop
    jmp @b
    ret
WinMain endp
end start
</pre><br>

<p>
視窗將無法得到適當的處理，導致顯示有問題<br>
<img style="border:0px" src="dlg_window/2.jpg" class="maxSize">
</p>

<p>
<br><a href="../../program.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
