<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Wine &gt;&gt; C/C++ &gt;&gt; Dialog</h3>
<p><b>Event</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="http://winapi.freetechsecrets.com/win32/">win32</a><br>
2. <a href="http://www.winprog.org/tutorial/">tutorial</a><br>
3. <a href="https://github.com/gammasoft71/Examples_Win32">examples_win32</a><br><br>

一般在建立Windows視窗時，會註冊自定義的Class並且設定事件處理的副程式(callback)，不過，目前範例使用的Class是系統預設的WC_DIALOG，因此，可以透過SetWindowLongPtr()設定callback，這種替換callback的行為就稱為Subclass，意指為原本Class的Subclass，所以Subclass後，需要將原先callback的位址(SetWindowLongPtr()的回傳值)保存下來，然後透過呼叫CallWindowProc()(傳入原先callback的位址)，用來將處理控制權移交回原先視窗元件，所以當有多層Subclass的情形發生時，每次在處理事件時，記得判斷對應的Handle，如：在處理關閉事件時(WM_CLOSE)，會先判斷目前的hWnd是否為當前的視窗hWnd，如果是當前視窗hWnd，才進行關閉的動作，避免關閉到其它視窗元件。<br><br>

說明：
</p>
<table>
<tr><th>API</th></tr>
<tr><td>VOID PostQuitMessage(int nExitCode);</td></tr>
<tr><td>LRESULT CallWindowProc(WNDPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</td></tr>
<tr><td>LONG_PTR SetWindowLongPtr(HWND hWnd, int nIndex, LONG_PTR dwNewLong);</td></tr>
<tr><td>BOOL ShowWindow(HWND hWnd, int nCmdShow);</td></tr>
</table><br>

<p>
main.c
</p>
<pre class="brush:cpp">
#include &lt;windows.h&gt;

HWND hWin = NULL;
WNDPROC defWndProc = NULL;

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    switch (uMsg) {
    case WM_CLOSE:
        PostQuitMessage(0);
        return 0;
    }
    return CallWindowProc(defWndProc, hWnd, uMsg, wParam, lParam);
}

int main(int argc, char **argv)
{
    hWin = CreateWindow(WC_DIALOG, "main", WS_OVERLAPPEDWINDOW, 0, 0, 300, 300,
                        NULL, NULL, NULL, NULL);
    defWndProc =
        (WNDPROC)SetWindowLongPtr(hWin, GWLP_WNDPROC, (long int)WndProc);
    ShowWindow(hWin, SW_SHOW);

    MSG msg = {0};
    while (GetMessage(&amp;msg, NULL, 0, 0)) {
        DispatchMessage(&amp;msg);
    }
    return 0;
}
</pre>
<p>
<b>Line 9 ~ 11</b>：處理關閉事件(WM_CLOSE)<br>，值得注意的地方是，SendMessage()是屬於Block方式呼叫(必須等待動作執行完畢才返回)，而PostQuitMessage()則是Non-block方式呼叫<br>
<b>Line 13</b>：將處理控制權移交給下一個視窗元件</br>
<b>Line 18 ~ 19</b>：保存當前視窗的hWnd<br>
<b>Line 20 ~ 21</b>：設定當前視窗的callback<br>
<b>Line 22</b>：由於沒有設定WS_VISIBLE，因此，透過ShowWindow()讓當前視窗可視化<br>
<b>Line 25 ~ 27</b>：提取並且分發事件(Message)<br><br>

編譯、執行
</p>
<pre>
$ winegcc main.c -o main
$ wine ./main.exe
</pre>
<p>
<img style="border:0px" src="cpp_dlg_event/1.jpg" class="maxSize">
</p>

<p>
<br><a href="../../program.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
