<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Wine &gt;&gt; C/C++ &gt;&gt; Dialog</h3>
<p><b>ScrollBar</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="http://winapi.freetechsecrets.com/win32/">win32</a><br>
2. <a href="https://www-user.tu-chemnitz.de/~heha/petzold/ch05d.htm">petzold</a><br>
3. <a href="http://www.winprog.org/tutorial/">tutorial</a><br>
4. <a href="https://github.com/gammasoft71/Examples_Win32">examples_win32</a><br><br>

說明：
</p>
<table>
<tr><th>API</th></tr>
<tr><td>int SetScrollPos(HWND hWnd, int nBar, int nPos, BOOL bRedraw);</td></tr>
<tr><td>BOOL SetScrollRange(HWND hWnd, int nBar, int nMinPos, int nMaxPos, BOOL bRedraw);</td></tr>
</table><br>

<p>
main.c
</p>
<pre class="brush:cpp">
#include &lt;stdbool.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;windows.h&gt;

HWND hWin = NULL;
WNDPROC defWndProc = NULL;
int hPos = 0;
int vPos = 0;
char buf[255] = {0};

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    int updated = 0;

    switch (uMsg) {
    case WM_CLOSE:
        DestroyWindow(hWnd);
        return 0;
    case WM_DESTROY:
        PostQuitMessage(0);
        return 0;
    case WM_PAINT:
        PAINTSTRUCT ps = {0};
        HDC hdc = BeginPaint(hWnd, &amp;ps);
        HFONT font =
            CreateFont(38, 0, 0, 0, FW_BOLD, false, false, false, 0,
                       OUT_OUTLINE_PRECIS, CLIP_DEFAULT_PRECIS,
                       CLEARTYPE_QUALITY, DEFAULT_PITCH | FF_DONTCARE, "Arial");
        SetTextColor(hdc, RGB(0x00, 0x00, 0xff));
        SetBkMode(hdc, TRANSPARENT);
        SelectObject(hdc, font);
        DrawText(hdc, buf, strlen(buf), &amp;ps.rcPaint,
                 DT_SINGLELINE | DT_CENTER | DT_VCENTER);
        EndPaint(hWnd, &amp;ps);
        DeleteObject(font);
        break;
    case WM_VSCROLL:
        switch (LOWORD(wParam)) {
        case SB_LINEUP:
            vPos -= 1;
            updated = 1;
            break;
        case SB_LINEDOWN:
            vPos += 1;
            updated = 1;
            break;
        case SB_PAGEUP:
            vPos -= 10;
            updated = 1;
            break;
        case SB_PAGEDOWN:
            vPos += 10;
            updated = 1;
            break;
        }
        break;
    case WM_HSCROLL:
        switch (LOWORD(wParam)) {
        case SB_LINEUP:
            hPos -= 1;
            updated = 1;
            break;
        case SB_LINEDOWN:
            hPos += 1;
            updated = 1;
            break;
        case SB_PAGEUP:
            hPos -= 10;
            updated = 1;
            break;
        case SB_PAGEDOWN:
            hPos += 10;
            updated = 1;
            break;
        }
        break;
    }

    if (updated &gt; 0) {
        if (vPos &lt; 0) {
            vPos = 0;
        }
        if (vPos &gt; 99) {
            vPos = 99;
        }
        if (hPos &lt; 0) {
            hPos = 0;
        }
        if (hPos &gt; 99) {
            hPos = 99;
        }
        SetScrollPos(hWnd, SB_VERT, vPos, TRUE);
        SetScrollPos(hWnd, SB_HORZ, hPos, TRUE);
        sprintf(buf, "h:%d, v:%d", hPos, vPos);
        InvalidateRect(hWnd, NULL, true);
    }
    return CallWindowProc(defWndProc, hWnd, uMsg, wParam, lParam);
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
                   LPSTR lpCmdLine, int nCmdShow)
{
    hWin = CreateWindow(WC_DIALOG, "main",
                        WS_OVERLAPPEDWINDOW | WS_VSCROLL | WS_HSCROLL, 0, 0,
                        300, 300, NULL, NULL, NULL, NULL);
    defWndProc =
        (WNDPROC)SetWindowLongPtr(hWin, GWLP_WNDPROC, (long int)WndProc);
    ShowWindow(hWin, SW_SHOW);

    SetScrollRange(hWin, SB_VERT, 0, 100, FALSE);
    SetScrollRange(hWin, SB_HORZ, 0, 100, FALSE);
    SetScrollPos(hWin, SB_VERT, vPos, TRUE);
    SetScrollPos(hWin, SB_HORZ, hPos, TRUE);

    MSG msg = {0};
    while (GetMessage(&amp;msg, NULL, 0, 0)) {
        DispatchMessage(&amp;msg);
    }
    ExitProcess(0);
    return 0;
}
</pre><br>
<p>
編譯、執行
</p>
<pre>
$ winegcc main.c -o main -lgdi32
$ wine ./main.exe
</pre>
<p>
<img style="border:0px" src="cpp_dlg_scrollbar/1.jpg" class="maxSize">
</p>

<p>
<br><a href="../../program.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
