<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><script type="text/javascript" src="../page_head.js"></script>

<h3><a href="../program.htm">程式語言</a> - GNU - C/C++ - <b>Set Capability(In Container)</b></h3>
<hr size="1"><br>
<p>
參考資訊：<br>
http://www.vishalchovatiya.com/clone-system-call-example/<br><br>

main.c
</p>
<pre class="brush:cpp">
#define _GNU_SOURCE
#include &lt;sys/wait.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sched.h&gt;
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/capability.h&gt;

static int child(void *argv)
{
    cap_t caps = {0};
    unsigned cap_num = 1;
    cap_value_t cap_list[1] = {0};

    caps = cap_init();
    cap_clear(caps);
    cap_set_proc(caps);
    
    cap_list[0] = CAP_SYS_ADMIN;
    cap_set_flag(caps, CAP_EFFECTIVE, cap_num, cap_list, CAP_SET);
    cap_set_flag(caps, CAP_INHERITABLE, cap_num, cap_list, CAP_SET);
    cap_set_flag(caps, CAP_PERMITTED, cap_num, cap_list, CAP_SET);
    cap_set_proc(caps);
    cap_free(caps);
    return 0;
}

int main(int argc, char **argv)
{
    const unsigned int STACK_SIZE = 4096;

    char *stack = malloc(STACK_SIZE);
    if (stack) {
        pid_t pid = clone(child, stack + STACK_SIZE, CLONE_NEWPID | CLONE_NEWUSER | CLONE_NEWCGROUP | CLONE_VFORK, NULL);
        waitpid(pid, NULL, 0);
        free(stack);
    }
    return 0;
}
</pre><br>
<p>
使用者也可以使用如下命令切換namespace
</p>
<pre>
$ unshare -pUCf
</pre>

<br><script type="text/javascript" src="../tail.js"></script>
