<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><script type="text/javascript" src="../page_head.js"></script>

<h3><a href="../program.htm">程式語言</a> - GNU - C/C++ - <b>UDP Server、Client</b></h3>
<hr size="1"><br>
<p>
參考資訊：<br>
https://www.geeksforgeeks.org/udp-client-server-using-connect-c-implementation/<br><br>

server.c
</p>
<pre class="brush:cpp">
#include &lt;stdio.h&gt; 
#include &lt;stdlib.h&gt; 
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/types.h&gt; 
#include &lt;arpa/inet.h&gt; 
#include &lt;sys/socket.h&gt; 
#include &lt;netinet/in.h&gt; 

int main(int argc, char **argv) 
{    
    int fd = 0;
    int len;
    struct sockaddr_in cliaddr = {0};
    struct sockaddr_in servaddr = {0};
    char buf[1024] = {0};
    const char *hello = "hello from server !";

    if (argc != 3) {
        printf("usage: %s ip port\n", argv[0]);
        return 0;
    }

    fd = socket(AF_INET, SOCK_DGRAM, 0);
    servaddr.sin_addr.s_addr = inet_addr(argv[1]); // INADDR_ANY;
    servaddr.sin_port = htons(atoi(argv[2]));
    servaddr.sin_family = AF_INET;

    if (bind(fd, (struct sockaddr*)&amp;servaddr, sizeof(servaddr)) &lt; 0) {
        perror("bind");
        return -1;
    }

    len = sizeof(cliaddr);
    int r = recvfrom(fd, buf, sizeof(buf), 0, (struct sockaddr*)&amp;cliaddr, &amp;len);
    printf("%s\n", buf);
    sendto(fd, hello, strlen(hello), 0, (struct sockaddr*)&amp;cliaddr, sizeof(cliaddr)); 
    close(fd);
    return 0;
} 
</pre><br>

<p>
client.c
</p>
<pre class="brush:cpp">
#include &lt;stdio.h&gt; 
#include &lt;stdlib.h&gt; 
#include &lt;string.h&gt; 
#include &lt;arpa/inet.h&gt; 
#include &lt;sys/socket.h&gt; 
#include &lt;sys/types.h&gt; 
#include &lt;netinet/in.h&gt; 
#include &lt;unistd.h&gt; 
  
int main(int argc, char **argv) 
{    
    int r = 0; 
    int fd = -1;
    char buf[1024] = {0};
    struct sockaddr_in servaddr = {0}; 
    const char *hello = "hello from client !";

    if (argc != 3) {
        printf("usage: %s ip port\n", argv[0]);
        return 0;
    }

    servaddr.sin_addr.s_addr = inet_addr(argv[1]);
    servaddr.sin_port = htons(atoi(argv[2]));
    servaddr.sin_family = AF_INET;

    fd = socket(AF_INET, SOCK_DGRAM, 0); 
    if (connect(fd, (struct sockaddr *)&amp;servaddr, sizeof(servaddr)) &lt; 0) { 
        perror("connect"); 
        return -1;
    }

    sendto(fd, hello, strlen(hello), 0, (struct sockaddr*)NULL, sizeof(servaddr));
    recvfrom(fd, buf, sizeof(buf), 0, (struct sockaddr*)NULL, NULL);
    printf("%s\n", buf);
    close(fd);
    return 0;
}
</pre><br>

<p>
編譯、執行
</p>
<pre>
$ gcc server.c -o server
$ gcc client.c -o client

$ ./server 127.0.0.1 9999 &amp;
$ ./client 127.0.0.1 9999
hello from client !
hello from server !
</pre>

<br><script type="text/javascript" src="../tail.js"></script>
