<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><script type="text/javascript" src="../page_head.js"></script>

<h3><a href="../program.htm">程式語言</a> - OpenCV - Image Processing - <b>Convex Hull</b></h3>
<hr size="1"><br>
<p>
參考資訊：<br>
https://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html<br><br>

main.cpp
</p>
<pre class="brush:cpp">
#include &lt;opencv2/imgproc.hpp&gt;
#include &lt;opencv2/highgui.hpp&gt;
#include &lt;iostream&gt;

using namespace cv;
using namespace std;

int main(int argc, char **argv)
{
    vector&lt;Point&gt; pt;
    Mat img(250, 250, CV_8UC3);

    pt.push_back(Point(50, 50));
    pt.push_back(Point(70, 220));
    pt.push_back(Point(210, 30));
    pt.push_back(Point(200, 220));

    vector&lt;int&gt; hull;
    convexHull(Mat(pt), hull, true);
    img = Scalar::all(0);
    for (int i = 0; i &lt; 4; i++)
    {
        circle(img, pt[i], 3, Scalar(0, 0, 255), FILLED, LINE_AA);
    }

    int hullcount = (int)hull.size();
    Point pt0 = pt[hull[hullcount - 1]];
    for (int i = 0; i &lt; hullcount; i++)
    {
        Point p = pt[hull[i]];
        line(img, pt0, p, Scalar(0, 255, 0), 1, LINE_AA);
        pt0 = p;
    }
    imshow("hull", img);

    waitKey();
    return 0;
}
</pre><br>

<p>
CMakeLists.txt
</p>
<pre>
cmake_minimum_required(VERSION 2.8)
project(main)
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
add_executable(main main.cpp)
target_link_libraries(main ${OpenCV_LIBS})
</pre><br>

<p>
編譯並且執行
</p>
<pre>
$ cmake .
$ make
$ ./main
</pre><br>

<p>
完成<br>
<img src="opencv_convexhull/1.jpg" class="maxSize">
</p>

<br><script type="text/javascript" src="../tail.js"></script>
