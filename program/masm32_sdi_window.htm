<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><script type="text/javascript" src="../page_head.js"></script>

<h3><a href="../program.htm">程式語言</a> - MASM32 - Single Document Interface (SDI) - <b>Create Window</b></h3>
<hr size="1"><br>
<p>
參考資訊：<br>
http://winapi.freetechsecrets.com/win32/<br>
https://github.com/gammasoft71/Examples_Win32<br>
http://masm32.com/board/index.php?topic=3584.0<br><br>

Windows的視窗可以分成：<b>Dialog</b>、Single Document Interface(<b>SDI</b>)、Multiple Document Interface(<b>MDI</b>)三種類別，相對於SDI、MDI，Dialog類別是比較容易上手學習的一個類別，相當適合初次學習Windows視窗設計的使用者，而Windows視窗程式設計的核心就是圍繞着事件處理(處理Message)，任何的視窗設定或者溝通都是以事件導向為原則，因此，寫出一個簡單的視窗框架，將有助於了解Windows視窗程式的運作<br><br>

main.asm
</p>
<pre class="brush:asm">
    .386
    .model flat,stdcall
    option casemap:none
   
include c:\masm32\include\windows.inc
include c:\masm32\include\kernel32.inc
include c:\masm32\include\user32.inc
   
includelib c:\masm32\lib\user32.lib
includelib c:\masm32\lib\kernel32.lib
   
    .data
szName      db "main",0
hInstance   dd 0
CommandLine dd 0
wndClass    WNDCLASS &lt;0&gt;
   
    .code
WinMain proc hInst:DWORD, hPrevInst:DWORD, CmdLine:DWORD, CmdShow:DWORD
    local msg:MSG

    mov wndClass.lpfnWndProc, DefWindowProc
    mov wndClass.lpszClassName, offset szName
    invoke RegisterClass, offset wndClass

    invoke CreateWindowEx, WS_EX_LEFT, offset szName, offset szName, 
        WS_OVERLAPPEDWINDOW or WS_VISIBLE, 0, 0, 300, 300, NULL, NULL, NULL, NULL
  
@@:
    invoke GetMessage, addr msg, NULL, 0, 0
    cmp eax, 0
    je @f
    invoke DispatchMessage, addr msg
    jmp @b
@@:
    mov eax, msg.wParam
    ret
WinMain endp
 
start:
    invoke GetModuleHandle, NULL
    mov hInstance, eax
   
    invoke GetCommandLine
    mov CommandLine, eax
   
    invoke WinMain, hInstance, NULL, CommandLine, SW_SHOWDEFAULT
    invoke ExitProcess, eax
end start
</pre>
<p>
<b>Line 19~38</b>：proc、endp用來定義Procedure的區間<br>
<b>Line 20</b>：Local變數宣告方式<br>
<b>Line 22~24</b>：一般SDI視窗會註冊屬於自己的Class並且設定事件處理副程式，目前司徒著重在說明如何建立Windows視窗，因此，我們使用系統預設的事件處理副程式(DefWindowProc)，視窗訊息統一交給系統幫忙處理，由於是自定義的Class，因此，需要幫這個Class設定一個名字，之後就可以用這個Class名字來建立Windows視窗<br>
<b>Line 26~27</b>：使用剛剛註冊的Class來建立Windows視窗，WS_OVERLAPPEDWINDOW代表視窗有標題、最大化、最小化的按鈕，WS_VISIBLE是建立一個可視化的視窗<br>
<b>Line 29</b>：暫時性的Label，不需要指定名稱，適合小範圍的應用，但需要搭配@f、@b使用<br>
<b>Line 30</b>：從Queue提取Message(包含視窗、系統事件)<br>
<b>Line 32</b>：@f(forward)代表會跳到下一個@@位置(Line 30)<br>
<b>Line 33</b>：分發Message到處理視窗事件的副程式，由於目前註冊的處理副程式是使用系統預設(DefWindowProc)，因此，無法處理這個SDI視窗的Message，包含關閉視窗的Message，所以必須使用kill命令強制關閉該視窗<br>
<b>Line 34</b>：@b(back)代表會跳到上一個@@位置(Line 24)<br>
<b>Line 41~45</b>：一般習慣是在程式進入時，保存Instance、CommandLine的內容<br>
<b>Line 47</b>：呼叫自定義的WinMain()，模擬C語言的WinMain()，當然也可以把內容都寫在start()裡面<br><br>

完成<br>
<img style="border:0px" src="nasm_win32_sdi_window/1.jpg" class="maxSize">
</p>

<br><script type="text/javascript" src="../tail.js"></script>
