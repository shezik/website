<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushAsm.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>High Level Assembly (HLA) &gt;&gt; Assembly (x86) &gt;&gt; Win32 API (Original Style) &gt;&gt; Dialog</h3>
<p><b>Create Window</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="http://winapi.freetechsecrets.com/win32/">win32</a><br>
2. <a href="http://masm32.com/board/index.php?topic=3584.0">masm32</a><br><br>

Windows的視窗可以分成：<b>Dialog</b>、Single Document Interface(<b>SDI</b>)、Multiple Document Interface(<b>MDI</b>)三種類別，相較於SDI、MDI這兩類別的程式，Dialog類別是比較容易上手學習的一個類別，相當適合初學者入門學習，而Windows程式設計的精髓就是，學會其中一個類別，其餘類別都可以很容易上手，Windows控制項(如：Button、Edit)也是此類道理，比較需要注意的是，Windows視窗程式設計的核心是圍繞着事件處理(處理Message)，任何的視窗設定或者溝通都是以事件導向為原則，因此，寫出一個簡單的視窗框架，將有助於了解Windows視窗程式的運作<br><br>

main.hla
</p>
<pre class="brush:asm">
program main;

#include("w.hhf")
#include("args.hhf")
#include("memory.hhf")
#include("strings.hhf")

static
    hInstance:   dword;
    CommandLine: string;

readonly
    szCaption: string:= "main";

procedure WinMain(hInst:dword; hPrevInst:dword; CmdLine:string; CmdShow:dword);
var
    msg: w.MSG;

begin WinMain;
    w.CreateWindowEx(w.WS_EX_LEFT, w.WC_DIALOG, szCaption,
        w.WS_OVERLAPPEDWINDOW | w.WS_VISIBLE, 0, 0, 300, 300, 0, 0, NULL, NULL);
    
    forever
        w.GetMessage(msg, NULL, 0, 0);
        breakif(!eax);

        w.DispatchMessage(msg);
    endfor;
    mov(msg.wParam, eax);
end WinMain;

begin main;
    w.GetModuleHandle(NULL);
    mov(eax, hInstance);
    mov(arg.cmdLn(), CommandLine);

    WinMain(hInstance, NULL, CommandLine, w.SW_SHOWNORMAL);

    w.ExitProcess(eax);
end main;
</pre>
<p>
<b>Line 8</b>：初始化的資料區段<br>
<b>Line 9~10</b>：初始化的Global變數<br>
<b>Line 12</b>：唯讀的資料區段<br>
<b>Line 13</b>：唯讀的Global變數<br>
<b>Line 15~30</b>：類似Pascal語言的Procedure宣告方式<br>
<b>Line 16~17</b>：類似Pascal語言的Local變數宣告方式<br>
<b>Line 19~30</b>：類似Pascal語言的Procedure主體<br>
<b>Line 20~21</b>：在建立Windows視窗時，需要指定對應的Class，如：Edit、Button，除了可以使用系統預設的Class之外，也可以註冊自定義的Class，上面例子使用的WC_DIALOG，就是系統預設定義的Dialog Class，WS_OVERLAPPEDWINDOW代表視窗有標題、最大化、最小化的按鈕，WS_VISIBLE是建立一個可視化的視窗<br>
<b>Line 23~28</b>：無窮迴圈寫法<br>
<b>Line 24</b>：從Queue提取Message(包含視窗、系統事件)<br>
<b>Line 27</b>：分發Message到處理視窗事件的副程式，由於目前的Dialog視窗並沒有對應的處理副程式，因此，無法處理任何Message，包含關閉視窗的Message，所以執行後，必須使用kill命令強制關閉該視窗<br>
<b>Line 29</b>：回傳值都是放在eax<br>
<b>Line 33~35</b>：一般習慣是在程式進入時，保存Instance、CommandLine的內容<br>
<b>Line 37</b>：呼叫自定義的WinMain()，模擬C語言的WinMain()，當然也可以把內容都寫在main()裡面<br>
<b>Line 39</b>：結束Process並且釋放相關資源<br><br>

Makefile
</p>
<pre>
export WINEPREFIX=/home/user/.wine_amd64

TARGET=main
MYWINE=box86 wine

all:
    ${MYWINE} hlaparse.exe -WIN32 -level=high -v -test ${TARGET}.hla
    ${MYWINE} polink.exe @${TARGET}.link hlalib.lib ${TARGET}.obj /OUT:${TARGET}.exe

run:
    ${MYWINE} ${TARGET}.exe

clean:
    rm -rf ${TARGET}.exe ${TARGET}.obj ${TARGET}.link
</pre><br>

<p>
編譯、執行
</p>
<pre>
$ make
$ make run
</pre>
<p>
<img style="border:0px" src="win32_dlg_window/1.jpg" class="maxSize">
</p>

<p>
<br><a href="../../program.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
