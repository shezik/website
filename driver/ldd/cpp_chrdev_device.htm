<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Linux Device Driver &gt;&gt; C/C++ &gt;&gt; chrdev</h3>
<p><b>device</b></p>
<hr size="1">
<p>
參考資訊：<br>
1. <a href="https://github.com/steward-fu/ldd">Source Code</a><br><br>

除了使用mknod工具建立Symbloic Link之外，字元驅動程式也可以自行建立這個Symbolic Link<br><br>

建立步驟：<br>
1. alloc_chrdev_region()<br>
2. class_create()<br>
3. device_create()<br>
4. cdev_init()<br>
5. cdev_add()<br><br>

釋放步驟：<br>
1. device_destroy()<br>
2. cdev_del()<br>
3. class_destroy()<br>
4. unregister_chrdev_region()<br><br>

main.c
</p>
<pre class="brush:cpp">
#include &lt;linux/cdev.h&gt;
#include &lt;linux/init.h&gt;
#include &lt;linux/device.h&gt;
#include &lt;linux/module.h&gt;

MODULE_LICENSE("GPL");
MODULE_AUTHOR("Steward Fu");
MODULE_DESCRIPTION("Linux Driver");

static int base=0;
static struct cdev mycdev;
static struct class *myclass=NULL;

static int myopen(struct inode *inode, struct file *file)
{
  printk("%s\n", __func__);
  return 0;
}

static int myclose(struct inode *inode, struct file *file)
{
  printk("%s\n", __func__);
  return 0;
}

static const struct file_operations myfops = {
  .owner = THIS_MODULE,
  .open = myopen,
  .release = myclose,
};

int ldd_init(void)
{
  alloc_chrdev_region(&amp;base, 0, 1, "myfile");
  myclass = class_create(THIS_MODULE, "myfile"); // /sys/class/myfile
  device_create(myclass, NULL, base, NULL, "myfile"); // /dev/myfile
  cdev_init(&amp;mycdev, &amp;myfops);
  cdev_add(&amp;mycdev, base, 1);
  return 0;
}
 
void ldd_exit(void)
{
  device_destroy(myclass, base);
  cdev_del(&amp;mycdev);
  class_destroy(myclass);
  unregister_chrdev_region(base, 1);
}
 
module_init(ldd_init);
module_exit(ldd_exit);
</pre>
<p>
<b>ldd_init</b>: 建立字元驅動程式<br>
<b>myopen</b>: 對應User Application的open()<br>
<b>myclose</b>: 對應User Application的close()<br>
<b>ldd_exit</b>: 刪除字元驅動程式<br><br>

安裝驅動
</p>
<pre>
# insmod /boot/main.ko 
</pre><br>

<p>
由於使用<b>class device</b>，因此，Symbolic已經建立完成，不再需要使用mknod建立
</p>
<pre>
# ls -al /dev/myfile
  crw-r--r--    1 root     root      243,   0 Jan  1 00:00 /dev/myfile
</pre><br>

<p>
開啟裝置
</p>
<pre>
# echo "" &gt; /dev/myfile
  myopen
  sh: write error: Invalid argument myclose
</pre><br>

<p>
<br><a href="../../driver.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
