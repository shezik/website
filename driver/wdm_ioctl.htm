<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><script type="text/javascript" src="../page_head.js"></script>

<h3><a href="../driver.htm">驅動程式</a> - Windows Driver Model (WDM) - 教學說明 - <b>4. User Application透過IOCTL跟驅動程式溝通</b></h3>
<hr size="1"><br>
<p>
參考資訊：<br>
https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/defining-i-o-control-codes<br><br>

Input Output Control(IOCTL)是另一種可以跟驅動程式溝通的方式，User Application透過呼叫Win32 API DeviceIoControl()跟驅動程式溝通並且帶入命令參數，驅動程式可以依據不一樣的命令做不一樣的事情，而除了命令參數以外，DeviceIoControl()還可以傳入Input和Output Buffer，Buffer的處理方式也是需要做設定才可以使用，處理方式分為Buffered、Direct和Neither三種方式，感覺是不是跟File的Buffer設定方式很相似呢？沒錯，基本上是一樣的，雖然司徒講得有點複雜，不過，只要把Buffer的設定方式搞懂後，使用者就可以發現，整個運作原理是相當容易理解的<br><br>

使用者可能好奇想問，IRP_MJ_READ、IRP_MJ_WRITE是否可以取代IRP_MJ_DEVICE_CONTROL的功能呢？答案：肯定是可以的，只要把資料做編碼，功能上是可以取代的，只是這樣的作法，把資料傳輸跟控制應用都綁在一起，失去原有的設計本質，因此，如果以資料為傳輸目的，建議使用IRP_MJ_READ、IRQP_MJ_WRITE，而以控制應用為目的時，則建議使用IRP_MJ_DEVICE_CONTROL的方式<br><br>

IOCTL命令是指什麼東西呢？其實就是一個編碼後的32 bits的數值，定義如下：
</p>
<pre>
#define CTL_CODE(DeviceType, Function, Transfer, Access) (((DeviceType) &lt;&lt; 16) | ((Access) &lt;&lt; 14) | ((Function) &lt;&lt; 2) | (Transfer))
</pre><br>

<p>
IOCTL欄位<br>
<img src="wdm_ioctl/1.jpg" class="maxSize"><br><br>

對應的溝通管道
</p>
<table>
<tr><th>Win32 API</th><th>Kernel IRP</th></tr>
<tr><td>CreateFile()</td><td>IRP_MJ_CREATE</td></tr>
<tr><td>DeviceIoControl()</td><td>IRP_MJ_DEVICE_CONTROL</td></tr>
<tr><td>CloseFile()</td><td>IRP_MJ_CLOSE</td></tr>
</table><br>

<p>
IOCTL取得方式
</p>
<table>
<tr><th>IOCTL Code</th></tr>
<tr><td>(IrpStack)<br>Parameters.DeviceIoControl.IoControlCode</td></tr>
</table><br>

<br><script type="text/javascript" src="../tail.js"></script>
