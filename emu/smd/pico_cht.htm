<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Sega Genesis &gt;&gt; PicoDrive</h3>
<p><b>支援中文檔名(倚天字型)</b></p>
<hr size="1">
<p>
程式如下：
</p>
<pre class="brush:cpp">
diff -Naur old/platform/common/main.c new/platform/common/main.c
--- old/platform/common/main.c	2019-11-09 21:40:34.877667476 -0500
+++ new/platform/common/main.c	2019-11-09 22:01:11.423148014 -0500
@@ -6,6 +6,7 @@
  * See COPYING file in the top-level directory.
  */
 
+#include &lt;iconv.h&gt;
 #include &lt;stdio.h&gt;
 #include &lt;stdlib.h&gt;
 #include &lt;string.h&gt;
@@ -18,7 +19,7 @@
 #include "version.h"
 #include &lt;cpu/debug.h&gt;
 
-
+iconv_t cd=0;
 static int load_state_slot = -1;
 char **g_argv;
 
@@ -76,6 +77,13 @@
 {
 	g_argv = argv;
 
+  cd = iconv_open("big5", "utf-8");
+  printf("iconv_open: 0x%x\n", cd);
+  if(cd == 0){
+    printf("failed to open iconv !\n");
+    return -1;
+  }
+
 	plat_early_init();
 
 	in_init();
@@ -145,7 +153,7 @@
 	}
 
 	endloop:
-
+  iconv_close(cd);
 	emu_finish();
 	plat_finish();
 	plat_target_finish();

diff -Naur old/platform/libpicofe/menu.c new/platform/libpicofe/menu.c
--- old/platform/libpicofe/menu.c	2019-11-09 21:40:56.657656220 -0500
+++ new/platform/libpicofe/menu.c	2019-11-09 22:01:11.443147921 -0500
@@ -15,7 +15,9 @@
 #include &lt;stdarg.h&gt;
 #include &lt;time.h&gt;
 #include &lt;locale.h&gt; // savestate date
+#include &lt;iconv.h&gt;
 
+#include "big5font.h"
 #include "menu.h"
 #include "fonts.h"
 #include "readpng.h"
@@ -24,6 +26,7 @@
 #include "plat.h"
 #include "posix.h"
 
+extern iconv_t cd;
 static char static_buff[64];
 static int  menu_error_time = 0;
 char menu_error_msg[64] = { 0, };
@@ -89,34 +92,34 @@
 
 	for (i = 0; i &lt; len; i++)
 	{
-		unsigned char  *src = menu_font_data + (unsigned int)text[i] * me_mfont_w * me_mfont_h / 2;
-		unsigned short *dst = dest;
-		int u, l;
-
-		for (l = 0; l &lt; lh; l++, dst += g_menuscreen_pp - me_mfont_w)
-		{
-			for (u = me_mfont_w / 2; u &gt; 0; u--, src++)
-			{
-				int c, r, g, b;
-				c = *src &gt;&gt; 4;
-				r = (*dst &amp; 0xf800) &gt;&gt; 8;
-				g = (*dst &amp; 0x07e0) &gt;&gt; 3;
-				b = (*dst &amp; 0x001f) &lt;&lt; 3;
-				r = (c^0xf)*r/15 + c*tr/15;
-				g = (c^0xf)*g/15 + c*tg/15;
-				b = (c^0xf)*b/15 + c*tb/15;
-				*dst++ = ((r&lt;&lt;8)&amp;0xf800) | ((g&lt;&lt;3)&amp;0x07e0) | (b&gt;&gt;3);
-				c = *src &amp; 0xf;
-				r = (*dst &amp; 0xf800) &gt;&gt; 8;
-				g = (*dst &amp; 0x07e0) &gt;&gt; 3;
-				b = (*dst &amp; 0x001f) &lt;&lt; 3;
-				r = (c^0xf)*r/15 + c*tr/15;
-				g = (c^0xf)*g/15 + c*tg/15;
-				b = (c^0xf)*b/15 + c*tb/15;
-				*dst++ = ((r&lt;&lt;8)&amp;0xf800) | ((g&lt;&lt;3)&amp;0x07e0) | (b&gt;&gt;3);
-			}
-		}
-		dest += me_mfont_w;
+    unsigned char  *src = menu_font_data + (unsigned int)text[i] * me_mfont_w * me_mfont_h / 2;
+    unsigned short *dst = dest;
+    int u, l;
+
+    for (l = 0; l &lt; lh; l++, dst += g_menuscreen_pp - me_mfont_w)
+    {
+      for (u = me_mfont_w / 2; u &gt; 0; u--, src++)
+      {
+        int c, r, g, b;
+        c = *src &gt;&gt; 4;
+        r = (*dst &amp; 0xf800) &gt;&gt; 8;
+        g = (*dst &amp; 0x07e0) &gt;&gt; 3;
+        b = (*dst &amp; 0x001f) &lt;&lt; 3;
+        r = (c^0xf)*r/15 + c*tr/15;
+        g = (c^0xf)*g/15 + c*tg/15;
+        b = (c^0xf)*b/15 + c*tb/15;
+        *dst++ = ((r&lt;&lt;8)&amp;0xf800) | ((g&lt;&lt;3)&amp;0x07e0) | (b&gt;&gt;3);
+        c = *src &amp; 0xf;
+        r = (*dst &amp; 0xf800) &gt;&gt; 8;
+        g = (*dst &amp; 0x07e0) &gt;&gt; 3;
+        b = (*dst &amp; 0x001f) &lt;&lt; 3;
+        r = (c^0xf)*r/15 + c*tr/15;
+        g = (c^0xf)*g/15 + c*tg/15;
+        b = (c^0xf)*b/15 + c*tb/15;
+        *dst++ = ((r&lt;&lt;8)&amp;0xf800) | ((g&lt;&lt;3)&amp;0x07e0) | (b&gt;&gt;3);
+      }
+    }
+    dest += me_mfont_w;
 	}
 
 	if (x &lt; border_left)
@@ -154,8 +157,7 @@
 {
 	unsigned char  *src;
 	unsigned short *dst;
-	int multiplier = me_sfont_w / 6;
-	int i;
+	int i, multiplier = me_sfont_w / 6, acc_x=0;
 
 	for (i = 0;; i++, x += me_sfont_w)
 	{
@@ -165,26 +167,76 @@
 		if (!c || c == '\n')
 			break;
 
-		src = fontdata6x8[c];
-		dst = (unsigned short *)g_menuscreen_ptr + x + y * g_menuscreen_pp;
-
-		while (h--)
-		{
-			int m, w2, h2;
-			for (h2 = multiplier; h2 &gt; 0; h2--)
-			{
-				for (m = 0x20; m; m &gt;&gt;= 1) {
-					if (*src &amp; m)
-						for (w2 = multiplier; w2 &gt; 0; w2--)
-							*dst++ = color;
-					else
-						dst += multiplier;
-				}
-
-				dst += g_menuscreen_pp - me_sfont_w;
-			}
-			src++;
-		}
+    if(c &lt; 0x80){
+      src = fontdata6x8[c];
+      dst = (unsigned short *)g_menuscreen_ptr + x + y * g_menuscreen_pp + acc_x;
+
+      while (h--)
+      {
+        int m, w2, h2;
+        for (h2 = multiplier; h2 &gt; 0; h2--)
+        {
+          for (m = 0x20; m; m &gt;&gt;= 1) {
+            if (*src &amp; m)
+              for (w2 = multiplier; w2 &gt; 0; w2--)
+                *dst++ = color;
+            else
+              dst += multiplier;
+          }
+
+          dst += g_menuscreen_pp - me_sfont_w;
+        }
+        src++;
+      }
+    }
+    else{
+      char *sin;
+      char *sout;
+      size_t in_len=0;
+      size_t out_len=0;
+      char in_buf[4]={0};
+      char out_buf[4]={0};
+      unsigned int high, low;
+      unsigned char top[30]={0};
+
+      in_buf[0] = texto[i++];
+      in_buf[1] = texto[i++];
+      in_buf[2] = texto[i];
+      sin = in_buf;
+      sout = out_buf;
+      in_len = 3;
+      out_len = sizeof(out_buf);
+      memset(out_buf, 0, out_len);
+      iconv(cd, &amp;sin, &amp;in_len, &amp;sout, &amp;out_len);
+      low = (unsigned char)out_buf[1];
+      high = 157 * (unsigned char)((unsigned char)out_buf[0] - 164);
+      if(low &lt; 127){
+        low-= 64;
+      }
+      else{
+        low-= 98;
+      }
+      memcpy(top, &amp;big5font[(high + low) * 30], 30);
+      dst = (unsigned short *)g_menuscreen_ptr + x + y * g_menuscreen_w + acc_x;
+
+      int x, y, z, t, cnt=0;
+      for(y=0; y&lt;15;y++){
+        for(z=0; z&lt;2;z++){
+          t = top[cnt++];
+          for(x=0; x&lt;8;x++){
+            if(t &amp; 0x80){
+              *dst++ = color;
+            }
+            else{
+              dst+= 1;
+            }
+            t&lt;&lt;=1;
+          }
+        }
+        dst += g_menuscreen_w - 16;
+      }
+      acc_x+= (16 - me_sfont_w);
+    }
 	}
 } 
</pre><br>

<p>
修改前<br>
<img src="pico_cht/1.jpg" class="maxSize"><br><br>

修改後<br>
<img src="pico_cht/2.jpg" class="maxSize">
</p>

<p>
<br><br><a href="../../emu.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
