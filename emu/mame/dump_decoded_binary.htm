<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>MAME</h3>
<p><b>Dump Decoded Binary</b></p>
<hr size="1">
<pre class="brush:cpp">
diff -Naur old/src/emu/romload.c new/src/emu/romload.c
--- old/src/emu/romload.c  2010-05-15 14:31:29.000000000 +0800
+++ new/src/emu/romload.c  2019-07-22 14:24:39.934850945 +0800
@@ -8,7 +8,8 @@
     Visit http://mamedev.org for licensing and usage restrictions.
 
 *********************************************************************/
-
+#include &lt;unistd.h&gt;
+#include &lt;fcntl.h&gt;
 #include "emu.h"
 #include "emuopts.h"
 #include "hash.h"
@@ -768,7 +769,7 @@
     UINT8 *bufptr = tempbuf;
 
     /* read as much as we can */
-    LOG(("  Reading %X bytes into buffer\n", bytesleft));
+    printf("reading %X bytes into buffer\n", bytesleft);
     if (rom_fread(romdata, bufptr, bytesleft) != bytesleft)
     {
       auto_free(romdata-&gt;machine, tempbuf);
@@ -776,7 +777,7 @@
     }
     numbytes -= bytesleft;
 
-    LOG(("  Copying to %p\n", base));
+    printf("copying to %p\n", base);
 
     /* unmasked cases */
     if (datamask == 0xff)
@@ -834,7 +835,7 @@
   }
   auto_free(romdata-&gt;machine, tempbuf);
 
-  LOG(("  All done\n"));
+  printf("all done\n");
   return ROM_GETLENGTH(romp);
 }
  
     /* handle files */
     else if (ROMENTRY_ISFILE(romp))
@@ -935,7 +935,7 @@
       int explength = 0;
 
       /* open the file if it is a non-BIOS or matches the current BIOS */
-      LOG(("Opening ROM file: %s\n", ROM_GETNAME(romp)));
+      printf("opening ROM file: %s\n", ROM_GETNAME(romp));
       if (!irrelevantbios &amp;&amp; !open_rom_file(romdata, regiontag, romp))
         handle_missing_file(romdata, romp);
 
@@ -965,9 +965,9 @@
         /* if this was the first use of this file, verify the length and CRC */
         if (baserom)
         {
-          LOG(("Verifying length (%X) and checksums\n", explength));
+          printf("verifying length (%X) and checksums\n", explength);
           verify_length_and_hash(romdata, ROM_GETNAME(baserom), explength, ROM_GETHASHDATA(baserom));
-          LOG(("Verify finished\n"));
+          printf("verify finished\n");
         }
 
         /* reseek to the start and clear the baserom so we don't reverify */
@@ -977,14 +977,24 @@
         explength = 0;
       }
       while (ROMENTRY_ISRELOAD(romp));
+      
+      // steward
+      unsigned char *p = (unsigned char*)romdata-&gt;region-&gt;base.v;
+      printf("ptr 0x%x\n", romdata-&gt;region-&gt;base.v);
+      unlink(ROM_GETNAME(romp));
+      int f = open(ROM_GETNAME(romp), O_WRONLY | O_CREAT, 0666);
+      write(f, romdata-&gt;region-&gt;base.v, romdata-&gt;region-&gt;length);
+      close(f);
+
 
       /* close the file */
       if (romdata-&gt;file != NULL)
       {
-        LOG(("Closing ROM file\n"));
+        printf("closing ROM file\n");
         mame_fclose(romdata-&gt;file);
         romdata-&gt;file = NULL;
       }
+      printf("\n");
     }
     else
     {
@@ -1277,7 +1287,11 @@
       UINT32 regionflags = ROMREGION_GETFLAGS(region);
 
       rom_region_name(regiontag, romdata-&gt;machine-&gt;gamedrv, source, region);
-      LOG(("Processing region \"%s\" (length=%X)\n", regiontag.cstr(), regionlength));
+      printf("region \"%s\" (length=%X)\n", regiontag.cstr(), regionlength);
 
       /* the first entry must be a region */
       assert(ROMENTRY_ISREGION(region));
@@ -1290,7 +1304,7 @@
 
         /* remember the base and length */
         romdata-&gt;region = memory_region_alloc(romdata-&gt;machine, regiontag, regionlength, regionflags);
-        LOG(("Allocated %X bytes @ %p\n", romdata-&gt;region-&gt;length, romdata-&gt;region-&gt;base.v));
+        printf("allocated %X bytes @ %p\n", romdata-&gt;region-&gt;length, romdata-&gt;region-&gt;base.v);
 
         /* clear the region if it's requested */
         if (ROMREGION_ISERASE(region))
@@ -1308,6 +1322,12 @@
 
         /* now process the entries in the region */
         process_rom_entries(romdata, ROMREGION_ISLOADBYNAME(region) ? ROMREGION_GETTAG(region) : NULL, region + 1);
+
+        // steward
+        unlink(regiontag.cstr());
+        int f = open(regiontag.cstr(), O_WRONLY | O_CREAT, 0666);
+        write(f, romdata-&gt;region-&gt;base.v, romdata-&gt;region-&gt;length);
+        close(f);
       }
       else if (ROMREGION_ISDISKDATA(region))
         process_disk_entries(romdata, ROMREGION_GETTAG(region), region + 1);
</pre><br>

<p>
<br><a href="../../emu.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
