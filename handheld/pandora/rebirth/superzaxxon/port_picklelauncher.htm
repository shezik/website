<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../../header.js"></script>
<div id="page">
<h3>Pandora Rebirth &gt;&gt; SuperZaxxon</h3>
<p><b>移植picklelauncher(支援中文路徑)</b></p>
<hr size="1">
<p>
程式碼如下：
</p>
<pre class="brush:cpp">
diff -Naur old/src/cselector.cpp new/src/cselector.cpp
--- old/src/cselector.cpp	2019-12-30 18:56:05.191250525 +0800
+++ new/src/cselector.cpp	2019-12-30 18:52:32.758599598 +0800
@@ -258,7 +258,7 @@
     flags = SCREEN_FLAGS;
     if (Config.Fullscreen == true)
     {
-        flags |= SDL_FULLSCREEN;
+        //flags |= SDL_FULLSCREEN;
     }
     Screen = SDL_SetVideoMode( Config.ScreenWidth, Config.ScreenHeight, Config.ScreenDepth, flags );
     if (Screen == NULL)
@@ -343,7 +343,8 @@
     ImageSelectPointer = LoadImage( Config.PathSelectPointer );
     if (ImageSelectPointer == NULL)
     {
-        ImageSelectPointer = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), ENTRY_ARROW, Config.Colors.at(COLOR_BLACK) );
+        //ImageSelectPointer = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), ENTRY_ARROW, Config.Colors.at(COLOR_BLACK) );
+        ImageSelectPointer = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_MEDIUM), ENTRY_ARROW, Config.Colors.at(COLOR_BLACK) );
     }
 
     //      Title text
@@ -352,7 +353,8 @@
     {
         text += " for " + Profile.TargetApp;
     }
-    ImageTitle = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_LARGE), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    //ImageTitle = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_LARGE), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    ImageTitle = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_LARGE), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
     if (ImageTitle == NULL)
     {
         Log( "Failed to create TTF surface with TTF_RenderText_Solid: %s\n", TTF_GetError() );
@@ -361,7 +363,8 @@
 
     //      About text
     text = "Written by " + string(APPAUTHOR) + " " + string(APPCOPYRIGHT);
-    ImageAbout = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    //ImageAbout = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    ImageAbout = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
     if (ImageAbout == NULL)
     {
         Log( "Failed to create TTF surface with TTF_RenderText_Solid: %s\n", TTF_GetError() );
@@ -1167,11 +1170,13 @@
         // Empty directories or zip files
         if (Config.UseZipSupport == true &amp;&amp; Profile.ZipFile.length() &gt; 0)
         {
-            text_surface = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_ZIP_LABEL, Config.Colors.at(COLOR_BLACK) );
+            //text_surface = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_ZIP_LABEL, Config.Colors.at(COLOR_BLACK) );
+            text_surface = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_ZIP_LABEL, Config.Colors.at(COLOR_BLACK) );
         }
         else
         {
-            text_surface = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_DIR_LABEL, Config.Colors.at(COLOR_BLACK) );
+            //text_surface = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_DIR_LABEL, Config.Colors.at(COLOR_BLACK) );
+            text_surface = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_MEDIUM), EMPTY_DIR_LABEL, Config.Colors.at(COLOR_BLACK) );
         }
 
         if (text_surface != NULL)
@@ -1219,7 +1224,8 @@
                 LastSelectedEntry = entry_index;
             }
 
-            text_surface = TTF_RenderText_Solid( Fonts.at(ListNames.at(entry_index).font), ListNames.at(entry_index).text.c_str(), Config.Colors.at(ListNames.at(entry_index).color) );
+            //text_surface = TTF_RenderText_Solid( Fonts.at(ListNames.at(entry_index).font), ListNames.at(entry_index).text.c_str(), Config.Colors.at(ListNames.at(entry_index).color) );
+            text_surface = TTF_RenderUTF8_Solid(Fonts.at(ListNames.at(entry_index).font), ListNames.at(entry_index).text.c_str(), Config.Colors.at(ListNames.at(entry_index).color));
 
             if (text_surface != NULL)
             {
@@ -1546,7 +1552,8 @@
 
     if (Config.ShowLabels == true)
     {
-        text_surface = TTF_RenderText_Solid( font, LabelButtons.at(button).c_str(), Config.Colors.at(Config.ColorFontButton) );
+        //text_surface = TTF_RenderText_Solid( font, LabelButtons.at(button).c_str(), Config.Colors.at(Config.ColorFontButton) );
+        text_surface = TTF_RenderUTF8_Solid( font, LabelButtons.at(button).c_str(), Config.Colors.at(Config.ColorFontButton) );
 
         rect_text.x = location.x + ((location.w-text_surface-&gt;w)/2);
         rect_text.y = location.y + ((location.h-text_surface-&gt;h)/2);
@@ -1618,7 +1625,8 @@
 
             if (Profile.EntryFilter.length() &gt; 0)
             {
-                ImageFilter = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), Profile.EntryFilter.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+                //ImageFilter = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), Profile.EntryFilter.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+                ImageFilter = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_MEDIUM), Profile.EntryFilter.c_str(), Config.Colors.at(Config.ColorFontFiles) );
                 if (ImageFilter != NULL)
                 {
                     clip.x = 0;
@@ -1665,7 +1673,8 @@
                 text += "-&gt;" + Profile.ZipFile;
             }
 
-            ImageFilePath = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+            //ImageFilePath = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_MEDIUM), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+            ImageFilePath = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_MEDIUM), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
             if (ImageFilePath != NULL)
             {
                 clip.x = 0;
@@ -1753,7 +1762,8 @@
         {
             text = i_to_a(DisplayList.at(Mode).absolute+1) + " of " + i_to_a(total);
         }
-        ImageIndex = TTF_RenderText_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
+        //ImageIndex = TTF_RenderText_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
+        ImageIndex = TTF_RenderUTF8_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
 
         if (ImageIndex != NULL)
         {
@@ -1798,7 +1808,8 @@
                 text = "Extract Selection";
             }
 
-            ImageZipMode = TTF_RenderText_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
+            //ImageZipMode = TTF_RenderText_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
+            ImageZipMode = TTF_RenderUTF8_Solid(Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles));
             if (ImageZipMode == NULL)
             {
                 Log( "Failed to create TTF surface with TTF_RenderText_Solid: %s\n", TTF_GetError());
@@ -1840,7 +1851,8 @@
          + " fps " + i_to_a(FPSDrawn) + " skp " + i_to_a(FPSSkip) + " slp " + i_to_a(FPSSleep)
          + " lp " + i_to_a(LoopTimeAverage);
 
-    ImageDebug = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    //ImageDebug = TTF_RenderText_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
+    ImageDebug = TTF_RenderUTF8_Solid( Fonts.at(FONT_SIZE_SMALL), text.c_str(), Config.Colors.at(Config.ColorFontFiles) );
 
     if (ImageDebug != NULL)
     {
</pre><br>

<p>
編譯步驟如下：
</p>
<pre>
$ cd
$ wget https://github.com/steward-fu/pandora/releases/download/v1.1/picklelauncher_cht.tar.gz
$ tar xvf picklelauncher_cht.tar.gz
$ cd picklelauncher
$ make
</pre><br>

<p>
移植前<br>
<img src="port_picklelauncher/1.jpg" class="maxSize"><br><br>

移植後<br>
<img src="port_picklelauncher/2.jpg" class="maxSize">
</p>

<p>
<br><a href="../../../../handheld.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
